{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/home/modal-info-journal/modal-info-journal.component.ts","webpack:///src/app/components/home/modal-info-journal/modal-info-journal.component.html","webpack:///src/app/components/menu/menu.component.ts","webpack:///src/app/components/menu/menu.component.html","webpack:///src/app/components/recherche-avancee/recherche-avancee.component.ts","webpack:///src/app/components/recherche-avancee/recherche-avancee.component.html","webpack:///src/app/components/statistics/statistics.component.ts","webpack:///src/app/components/statistics/statistics.component.html","webpack:///src/app/models/callByMonth.ts","webpack:///src/app/modules/material.module.ts","webpack:///src/app/services/call-for-paper.service.ts","webpack:///src/app/services/editeur.service.ts","webpack:///src/app/services/pipe/get-revue-name-by-id.pipe.ts","webpack:///src/app/services/pipe/get-widget-sjr.pipe.ts","webpack:///src/app/services/revue.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","matIconRegistry","domSanitizer","addSvgIcon","bypassSecurityTrustResourceUrl","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HomeComponent","callService","revueService","editeurService","dialog","formBuilder","displayedColumns","dataSource","checkoutForm","group","rank","required","editeur","getCalls","subscribe","res","paginator","sort","getRevues","revueList","getEditeurs","editeurList","value","filterPredicate","data","filter","journal","name","trim","toLowerCase","indexOf","title","description","getCallsByRank","calls","call","revueDuCall","getRevueById","fk_revue","fk_editeur","revue","isOpenAccess","openAccess","open","i","length","temp","event","filterValue","target","firstPage","pipe","sjr","applyFilter","onSubmitQuickSearch","ModalInfoJournalComponent","dialogRef","close","onNoClick","MenuComponent","RechercheAvanceeComponent","error","rechercheAvanceeFormGroup","maxLength","valid","affichageErreur","isFieldValid","field","get","onSubmit","StatisticsComponent","masonryOptions","gutter","callByEditeur","callByMonth","colorScheme","domain","masonryStats","limit","nbCallList","xAxisLabelCallByMonth","yAxisLabelCallByMonth","forEach","element","getNbCallByRevue","number","model","push","getNbCallByEditeur","models","Number","getNbCallByMonth","month","CallByMonth","MaterialModule","CallForPaperService","http","apiURL","url","console","log","post","providedIn","EditeurService","GetRevueNameByIdPipe","getRevueNameById","GetWidgetSjrPipe","getRevueWidgetById","RevueService","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { RechercheAvanceeComponent } from './components/recherche-avancee/recherche-avancee.component';\nimport { StatisticsComponent } from './components/statistics/statistics.component';\n\n\nconst routes: Routes = [\n  { \n    path: 'home', \n    component: HomeComponent \n  },\n  { \n    path: '',   \n    redirectTo: '/home',\n    pathMatch: 'full' \n  },\n  {\n    path: 'advanced-search',\n    component: RechercheAvanceeComponent\n  },\n  {\n    path: 'statistics',\n    component: StatisticsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n}\n","import { Component } from '@angular/core';\nimport { MatIconRegistry } from \"@angular/material/icon\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n  constructor(\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer\n  ){\n    this.matIconRegistry.addSvgIcon(\n      \"logo-c\",\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\"../assets/images/Logo-c.svg\")\n    );\n    this.matIconRegistry.addSvgIcon(\n      \"logo-full\",\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\"../assets/images/Logo-full.svg\")\n    );\n  }\n}\n","<app-menu></app-menu>\n<div>\n<!-- ROUTING -->\n<router-outlet></router-outlet>\n<!-- ROUTING -->\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './modules/material.module';\nimport { HomeComponent } from './components/home/home.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MenuComponent } from './components/menu/menu.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GetRevueNameByIdPipe } from './services/pipe/get-revue-name-by-id.pipe';\nimport { GetWidgetSjrPipe } from './services/pipe/get-widget-sjr.pipe';\nimport { ModalInfoJournalComponent } from './components/home/modal-info-journal/modal-info-journal.component';\nimport { RechercheAvanceeComponent } from './components/recherche-avancee/recherche-avancee.component';\nimport { StatisticsComponent } from './components/statistics/statistics.component';\nimport { NgxMasonryModule } from 'ngx-masonry';\nimport { NgxChartsModule }from '@swimlane/ngx-charts';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    MenuComponent,\n    StatisticsComponent,\n    ModalInfoJournalComponent,\n    RechercheAvanceeComponent,\n    GetRevueNameByIdPipe,\n    GetWidgetSjrPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    NgxChartsModule,\n    HttpClientModule,\n    MaterialModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxMasonryModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport { CallForPaperService } from 'src/app/services/call-for-paper.service';\nimport { RevueService } from 'src/app/services/revue.service';\nimport { map } from 'rxjs/operators';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Revue } from 'src/app/models/revue';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { ModalInfoJournalComponent } from './modal-info-journal/modal-info-journal.component';\nimport { Editeur } from 'src/app/models/editeur';\nimport { EditeurService } from 'src/app/services/editeur.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  // Nom des colonnes du tableau\n  displayedColumns: string[] = ['title', 'journal', 'description','deadline','SJR'];\n\n  // Tableau de données lié au tableau, ici les Calls for Paper, déclaré à un tableau vide\n  dataSource = new MatTableDataSource([]);\n\n  // OpenAcces d'un call\n  openAccess: string;\n\n  // Liste de toutes les revues\n  revueList: Array<Revue>;\n\n  // Liste des editeurs\n  editeurList: Array<Editeur>;\n\n  // Formulaire de triage par rang\n  checkoutForm: FormGroup;\n\n  // Spécificité Angular Material pour le tri et la pagination d'un tableau\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  // Création du formulaire\n  constructor(\n    private callService: CallForPaperService, \n    private revueService: RevueService, \n    private editeurService: EditeurService,\n    public dialog: MatDialog, \n    private formBuilder: FormBuilder) {\n    this.checkoutForm = this.formBuilder.group({\n      rank: ['', Validators.required],\n      editeur: ['', Validators.required]\n    })\n  }\n\n  // Récupération des données via les appels API du service de Revue et CallsForPaper\n  ngOnInit(): void {\n    this.callService.getCalls().subscribe((res)=>{\n      this.dataSource = new MatTableDataSource(res);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n    \n    this.revueService.getRevues().subscribe((res => {\n      this.revueList = res;\n    }));\n\n    this.editeurService.getEditeurs().subscribe((res) => {\n      this.editeurList = res;\n    });\n\n    this.checkoutForm.value.rank = \"none\";\n\n    this.dataSource.filterPredicate = (data, filter) => \n        data.journal.name.trim().toLowerCase().indexOf(filter) !== -1 ||\n        data.title.trim().toLowerCase().indexOf(filter) !== -1 ||\n        data.description.trim().toLowerCase().indexOf(filter) !== -1;\n  }\n\n  // Filtre les calls en fonction de leur rank et/ou de leur editeur\n  onSubmitQuickSearch() {\n    this.callService.getCallsByRank(this.checkoutForm.value.rank).subscribe((calls)=>{\n\n      if(this.checkoutForm.value.editeur !== \"all\") {\n        // On filtre le resultat avec les calls appartenant à l'éditeur selectionné\n        calls = calls.filter((call) => {\n          let revueDuCall: Revue = this.getRevueById(call.fk_revue);\n          return revueDuCall.fk_editeur === this.checkoutForm.value.editeur;\n        });\n      }\n\n      this.dataSource = new MatTableDataSource(calls);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  // Méthode d'ouverture du Dialog\n  openDialog(id: number): void {\n    let revue = this.getRevueById(id);\n    if(revue.isOpenAccess)\n      this.openAccess = \"Yes\";\n    else\n      this.openAccess = \"No\";\n\n    this.dialog.open(ModalInfoJournalComponent, {\n      data: {revue: revue, openAccess: this.openAccess}\n    });\n  }\n\n  // Retourne une revue en fonction de son id, utile car dans l'objet CallForPaper nous stockons une clé étrangère vers une révue qui correspond à l'id d'une revue\n  getRevueById(id: number): Revue {\n    for(var i = 0 ; i < this.revueList.length ; i++) {\n      var temp = this.revueList[i];\n      if(temp.id == id) {\n        return temp;\n      }\n    }\n  }\n\n  // Métode d'Angular Material pour le filtre sur les données via le champ prévu à cet effet\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  // Get le nom d'une revue par son ID\n  getRevueNameById(id: number) {\n    return this.revueService.getRevueById(id).pipe(\n      map((value) => value[0].name)\n    )\n  }\n\n  // Get le widget de la revue en fonction de son id\n  getRevueWidgetById(id: number) {\n    return this.revueService.getRevueById(id).pipe(\n      map((value) => value[0].sjr)\n    )\n  }\n}\n\n\n","<div class=\"docs-primary-header mat-elevation-z6\">\n    <h1>Grouping of all Calls For Papers</h1>\n</div>\n\n<div class=\"content\">\n\n    <mat-form-field>\n        <mat-label>Filter by title/journal/description</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. management\">\n    </mat-form-field>\n\n    <form class=\"quickSearchForm\" [formGroup]=\"checkoutForm\" (ngSubmit)=\"onSubmitQuickSearch()\">\n        <div class=\"radioGroupRank\">\n            <strong style=\"margin-right: 10px;\">Rank :</strong>\n            <span>\n                <input id=\"none\" type=\"radio\" value='None' formControlName=\"rank\">\n                <label for=\"none\">None</label>\n            </span>\n            <span>\n                <input id=\"cnrs\" type=\"radio\" value='CNRS' formControlName=\"rank\">\n                <label for=\"cnrs\">CNRS</label>\n            </span>\n            <span>\n                <input id=\"fnege\" type=\"radio\" value='FNEGE' formControlName=\"rank\">\n                <label for=\"fnege\">FNEGE</label>\n            </span>\n            <span>\n                <input id=\"hceres\" type=\"radio\" value='HCERES' formControlName=\"rank\">\n                <label for=\"hceres\">HCERES</label>\n            </span>\n        </div>\n    \n        <div>\n            <strong style=\"margin-right: 10px;\">Publisher :</strong>\n            <select name=\"editeurs\" formControlName=\"editeur\" [ngModel]=\"'all'\">\n                <option value=\"all\" selected>All</option>\n                <option *ngFor=\"let editeur of editeurList\" value=\"{{ editeur.id }}\">{{ editeur.name }}</option>\n            </select>\n        </div>\n    \n        <button class=\"btn\" type=\"submit\">\n            Search\n            <span class=\"material-icons icon\">search</span>\n        </button>\n    </form>\n\n    <table mat-table class=\"mat-elevation-z8\" [dataSource]=\"dataSource\" matSort>\n        \n        <ng-container matColumnDef=\"title\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Title </th>\n            <td mat-cell *matCellDef=\"let item\">\n                {{ item.title }}\n                <div>\n                    <a mat-button class=\"btn-details\" href=\"{{ item.url }}\" target=\"_blank\">\n                        View details<span class=\"material-icons icon\">visibility</span>\n                    </a>\n                </div>\n            </td>\n        </ng-container>\n        \n        <ng-container matColumnDef=\"journal\">\n            <th mat-header-cell *matHeaderCellDef> Journal </th>\n            <td mat-cell *matCellDef=\"let item\"><button mat-button class=\"mat-button-size\" (click)=\"openDialog(item.fk_revue)\">{{item.fk_revue | getRevueNameById | async}}</button></td>\n        </ng-container>\n        \n        <ng-container matColumnDef=\"description\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\n            <td mat-cell *matCellDef=\"let item\" style=\"text-align: justify;\">{{ item.desc }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"deadline\" class=\"deadline_cell\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Deadline </th>\n            <td mat-cell *matCellDef=\"let item\" >\n                <span *ngIf=\"item.deadline !== null; else empty_deadline\">{{ item.deadline | date :'yyyy-MM-dd' }}</span>\n            </td>\n        </ng-container>\n\n        <ng-template #empty_deadline>\n            <span>Date not found</span>\n        </ng-template>\n\n        <ng-container matColumnDef=\"SJR\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> SJR </th>\n            <td mat-cell *matCellDef=\"let item\" [innerHTML]=\"item.fk_revue | getWidgetSjr | async\" id=\"sjr\"></td>\n        </ng-container>\n        \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table> \n\n    <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n</div>","import { Component, Inject } from '@angular/core';\nimport { Revue } from 'src/app/models/revue';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n\n/*\n  Objet que nous passons au Dialog (Donner récupérable dans le modal-info-journal.html)\n*/\nexport interface DialogData {\n  revue: Revue;\n  openAccess: string;\n}\n\n@Component({\n  selector: 'app-modal-info-journal',\n  templateUrl: './modal-info-journal.component.html',\n  styleUrls: ['./modal-info-journal.component.css']\n})\nexport class ModalInfoJournalComponent {\n\n  constructor(public dialogRef: MatDialogRef<ModalInfoJournalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n  }\n\n  // Méthode qui ferme le dialog\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h1 mat-dialog-title>Journal informations</h1>\n\n<div mat-dialog-content>\n  <label><b>Name :</b> {{ data.revue.name }}</label>\n  <label>\n    <b>Rank FNEGE :</b> \n    <span *ngIf=\"data.revue.rankFNEGE; else empty_rank\">\n      {{ data.revue.rankFNEGE }}\n    </span>\n  </label>\n  <label>\n    <b>Rank HCERES :</b>\n    <span *ngIf=\"data.revue.rankHCERES && data.revue.rankHCERES !== ' '; else empty_rank\">\n      {{ data.revue.rankHCERES }}\n    </span>\n  </label>\n  <label>\n    <b>Rank CNRS :</b>\n    <span *ngIf=\"data.revue.rankCNRS; else empty_rank\">\n      {{ data.revue.rankCNRS }}\n    </span>\n  </label>\n  <label><b>Is Open Source :</b> {{ data.openAccess }}</label>\n</div>\n\n<ng-template #empty_rank>\n  <span class=\"material-icons icon\">close</span>\n</ng-template>\n\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\" cdkFocusInitial>Close</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  title = \"Hube Call\";\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div> \n  <mat-toolbar color=\"primary\">\n    <div fxShow=\"true\" fxHide.gt-sm=\"true\">\n      <button mat-icon-button (click)=\"sidenav.toggle()\">\n        <mat-icon>menu</mat-icon>\n      </button>\n    </div>\n    <a mat-button id=\"logo\" routerLink=\"/home\">\n      <img src=\"../../assets/images/logo.png\" alt=\"Yo\" width=\"165\" height=\"66\">\n    </a>\n    <span class=\"menu-spacer\"></span>\n    <div fxShow=\"true\" fxHide.lt-md=\"true\">\n      <a mat-button routerLink=\"/home\">All Calls</a>\n    </div>\n    <div fxShow=\"true\" fxHide.lt-md=\"true\">\n      <a mat-button routerLink=\"/advanced-search\">Advanced search</a>\n    </div>\n    <div fxShow=\"true\" fxHide.lt-md=\"true\">\n      <a mat-button routerLink=\"/statistics\">Statistics</a>\n    </div>\n  </mat-toolbar>\n\n  <mat-sidenav-container fxFlexFill>\n    <mat-sidenav color=\"primary\" #sidenav fxLayout=\"column\" mode=\"over\"  opened=\"false\" fxHide.gt-sm=\"true\">\n      <div fxLayout=\"column\">\n        <a mat-button routerLink=\"/about-us\">Calls</a>\n      </div>\n    </mat-sidenav>\n  </mat-sidenav-container>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-recherche-avancee',\n  templateUrl: './recherche-avancee.component.html',\n  styleUrls: ['./recherche-avancee.component.css']\n})\nexport class RechercheAvanceeComponent implements OnInit {\n\n  rechercheAvanceeFormGroup: FormGroup;\n\n  error: any = {};\n\n  constructor(private formBuilder: FormBuilder) { \n  }\n\n  ngOnInit(): void {\n    this.rechercheAvanceeFormGroup = this.formBuilder.group({\n      abstract: ['', [Validators.required, Validators.maxLength(5000)]]\n    })\n  }\n\n  onSubmit() {\n    if(this.rechercheAvanceeFormGroup.valid) {\n      this.error = {}; // il n'y a plus d'erreur sur les champs du formulaire\n\n      // SUITE\n\n    } else {\n      this.affichageErreur();\n    }\n  }\n\n  // Remplie le champs 'error' en fonction de l'état du formulaire pour afficher les erreurs\n  affichageErreur() {\n    this.error.abstract = !this.isFieldValid('abstract');\n  }\n\n  // Retourne true si le champs 'fied' n'est pas valide\n  isFieldValid(field: string) {\n    return this.rechercheAvanceeFormGroup.get(field).valid;\n  } \n\n}\n","<div class=\"docs-primary-header mat-elevation-z6\">\n    <h1>Find Calls For Papers</h1>\n</div>\n\n<div class=\"content\">\n    <form [formGroup]=\"rechercheAvanceeFormGroup\" (submit)=\"onSubmit()\">\n        <div class=\"explication\">\n            Enter abstract of your paper to easily find appropriate calls for paper by using text-mining technology.\n        </div>\n        \n        <hr style=\"width: 30%;\">\n\n        <div class=\"abstract-info\">\n            <label for=\"abstract\">Paper abstract *</label>\n            <div *ngIf=\"error.abstract\" class=\"error\">Abstract required</div>\n            <em>Maximum 5,000 characters<span class=\"material-icons icon\">info</span></em>\n        </div>\n        <textarea class=\"abstract-field\" formControlName=\"abstract\" maxlength=\"5000\" [ngClass]=\"{ 'field-has-error': error.abstract }\" \n            (keyup)=\"affichageErreur()\" placeholder=\"Enter your paper abstract here\"></textarea>\n\n        <button class=\"btn\" type=\"submit\">Find</button>\n\n    </form>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgxMasonryOptions, NgxMasonryComponent } from 'ngx-masonry';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Revue } from 'src/app/models/revue';\nimport { RevueService } from 'src/app/services/revue.service';\nimport { EditeurService } from 'src/app/services/editeur.service';\nimport { CallForPaperService } from 'src/app/services/call-for-paper.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { ModalInfoJournalComponent } from 'src/app/components/home/modal-info-journal/modal-info-journal.component';\nimport { element } from 'protractor';\n\n@Component({\n  selector: 'app-stats',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.css']\n})\n\nexport class StatisticsComponent implements OnInit {\n\n  public masonryOptions: NgxMasonryOptions = {\n    gutter: 20,\n  };\n\n  @ViewChild(NgxMasonryComponent) masonry: NgxMasonryComponent;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  // Nombre de call par editeur\n  callByEditeur = [];\n\n  // Nombre call par mois\n  callByMonth = [];\n\n  // Couleurs des élements des graphiques de la page statistiques\n  colorScheme = {\n    domain: ['#5AA454', '#A10A28', '#C7B42C', '#AAAAAA']\n  };\n\n  // Variable de construction des tuiles de la page stats\n  masonryStats = [];\n  limit = 15;\n\n  // Nom des colonnes du tableau\n  displayedColumns: string[] = ['revue', 'nbCall'];\n\n  // Tableau de données lié au tableau, ici les Calls for Paper, déclaré à un tableau vide\n  dataSource = new MatTableDataSource([]);\n\n  // OpenAcces d'un call\n  openAccess: string;\n\n  // Liste de toutes les revues\n  revueList: Array<Revue>;\n\n  // Liste du nombre call \n  nbCallList: number[] = [];\n\n  // Option du graph du nombre de call par mois \n  xAxisLabelCallByMonth = 'Month';\n  yAxisLabelCallByMonth = 'Number of call';\n\n  constructor(\n    private revueService: RevueService,\n    private editeurService: EditeurService,\n    private callService: CallForPaperService,\n    public dialog: MatDialog\n  ){}\n\n  // Récupération des données via les appels API des services\n  ngOnInit() {\n\n    // Récupération des revue selon le services\n    this.revueService.getRevues().subscribe((revueList => {\n      this.revueList = revueList;\n      this.revueList.forEach( element =>{\n        this.callService.getNbCallByRevue(element.id).subscribe((number => {\n          let model = { 'revue' : element, 'nbCall' : number};\n          const data = this.dataSource.data;\n          data.push(model);\n          this.dataSource.data = data;\n        }));\n      });\n    }));\n\n    // Récupéraion des infos concernant le nombre de calls par Editeurs\n    this.editeurService.getNbCallByEditeur().subscribe((models => {\n      models.forEach(element => {\n        let model = { 'name': element.name, 'value': Number(element.value)};\n        const data = this.callByEditeur;\n        data.push(model);\n        this.callByEditeur = [...data];\n      });\n    }));\n\n    // Récupération du nombre de call par mois \n    this.callService.getNbCallByMonth().subscribe((models => {\n      models.forEach(element => {\n        let model = { 'name': element.month, 'value': Number(element.number)};\n        const data = this.callByMonth;\n        data.push(model);\n        this.callByMonth = [...data];\n      });\n    }));\n\n    this.dataSource.filterPredicate = (data, filter) => data.revue.name.trim().toLowerCase().indexOf(filter) !== -1;\n  }\n\n  // Méthode d'ouverture du Dialog\n  openDialog(id: number): void {\n    let revue = this.getRevueById(id);\n    if(revue.isOpenAccess)\n      this.openAccess = \"Yes\";\n    else\n      this.openAccess = \"No\";\n\n    this.dialog.open(ModalInfoJournalComponent, {\n      data: {revue: revue, openAccess: this.openAccess}\n    });\n  }\n\n  // Retourne une revue en fonction de son id, utile car dans l'objet CallForPaper nous stockons une clé étrangère vers une révue qui correspond à l'id d'une revue\n  getRevueById(id: number): Revue {\n    for(var i = 0 ; i < this.revueList.length ; i++) {\n      var temp = this.revueList[i];\n      if(temp.id == id) {\n        return temp;\n      }\n    }\n  }\n\n  // Métode d'Angular Material pour le filtre sur les données via le champ prévu à cet effet\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","<div class=\"docs-primary-header mat-elevation-z6\">\n    <h1>Hub<i>e</i>Call's satistics</h1>\n</div>\n\n<div class=\"masonry-with-columns-2\">\n\n  <div class=\"stats_revue\">\n\n    <h1>Number of calls by journal</h1>\n\n    <div class=\"table_stats_revue\">\n\n      <mat-form-field>\n        <mat-label>Filter by Journal</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. management\">\n      </mat-form-field>\n\n      <table mat-table class=\"mat-elevation-z2\" [dataSource]=\"dataSource\">  \n\n        <ng-container matColumnDef=\"revue\">\n              <th mat-header-cell *matHeaderCellDef> Journal </th>\n              <td mat-cell *matCellDef=\"let item\">\n                <button mat-button class=\"mat-button-size\" (click)=\"openDialog(item.revue.id)\">\n                  {{item.revue.id | getRevueNameById | async}}\n                </button>\n              </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"nbCall\">\n              <th mat-header-cell *matHeaderCellDef> Number of calls </th>\n              <td mat-cell *matCellDef=\"let item\">\n                {{item.nbCall}}\n              </td>\n        </ng-container>\n\n        <tr mat-header-row class=\"mat_row\" *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n        <tr mat-row class=\"mat_row\" *matRowDef=\"let row; columns: displayedColumns\"></tr>\n\n      </table> \n\n    </div> \n  </div>\n\n  <div class=\"stats_editeurs\">\n\n    <h1>Number of calls by publisher</h1>\n    <div class=\"pie_editeur\">\n      <ngx-charts-pie-chart \n          [legend]=\"true\"\n          [scheme]=\"colorScheme\"\n          [legendTitle]=\"'Editors'\" \n          [labels]=\"true\"\n          [results]=\"callByEditeur\" >\n      </ngx-charts-pie-chart>\n    </div>\n  </div>\n\n  <div class=\"stats_mensuel\">\n\n    <h1>Number of calls by month</h1>\n    \n    <div class=\"chart_mois\">\n      <ngx-charts-bar-vertical \n        [results]=\"callByMonth\" \n        [scheme]=\"colorScheme\"\n        [gradient]=\"false\"\n        [xAxis]=\"true\"\n        [yAxis]=\"true\"\n        [legend]=\"true\"\n        [showXAxisLabel]=\"true\"\n        [showYAxisLabel]=\"true\"\n        [xAxisLabel]=\"xAxisLabelCallByMonth\"\n        [yAxisLabel]=\"yAxisLabelCallByMonth\">\n      </ngx-charts-bar-vertical>\n    </div>\n\n  </div>\n\n</div>","export class CallByMonth {\n    month : string;\n    number : number;\n}","import { NgModule }               from '@angular/core';\nimport { CommonModule }           from '@angular/common';\nimport { BrowserAnimationsModule }  from '@angular/platform-browser/animations';\nimport { MatCheckboxModule }        from '@angular/material/checkbox';\nimport { MatButtonModule }          from '@angular/material/button';\nimport { MatInputModule }           from '@angular/material/input';\nimport { MatAutocompleteModule }    from '@angular/material/autocomplete';\nimport { MatDatepickerModule }      from '@angular/material/datepicker';\nimport { MatFormFieldModule }       from '@angular/material/form-field';\nimport { MatRadioModule }           from '@angular/material/radio';\nimport { MatSelectModule }          from '@angular/material/select';\nimport { MatSliderModule }          from '@angular/material/slider';\nimport { MatSlideToggleModule }     from '@angular/material/slide-toggle';\nimport { MatMenuModule }            from '@angular/material/menu';\nimport { MatSidenavModule }         from '@angular/material/sidenav';\nimport { MatToolbarModule }         from '@angular/material/toolbar';\nimport { MatListModule }            from '@angular/material/list';\nimport { MatGridListModule }        from '@angular/material/grid-list';\nimport { MatCardModule }            from '@angular/material/card';\nimport { MatStepperModule }         from '@angular/material/stepper';\nimport { MatTabsModule }            from '@angular/material/tabs';\nimport { MatExpansionModule }       from '@angular/material/expansion';\nimport { MatButtonToggleModule }    from '@angular/material/button-toggle';\nimport { MatChipsModule }           from '@angular/material/chips';\nimport { MatIconModule }            from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule }     from '@angular/material/progress-bar';\nimport { MatDialogModule }          from '@angular/material/dialog';\nimport { MatTooltipModule }         from '@angular/material/tooltip';\nimport { MatSnackBarModule }        from '@angular/material/snack-bar';\nimport { MatTableModule }           from '@angular/material/table';\nimport { MatSortModule }            from '@angular/material/sort';\nimport { MatPaginatorModule }       from '@angular/material/paginator';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatListModule,\n    MatGridListModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule\n  ],\n  exports: [\n    CommonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatListModule,\n    MatGridListModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule\n  ]\n})\nexport class MaterialModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CallForPaper } from '../models/callForPaper';CallByMonth\nimport {environment} from '../../environments/environment';\nimport { CallByMonth } from '../models/callByMonth'\n\n@Injectable({\n  providedIn: 'root'\n})\n// Service permettant la récupration des Calls via des appels API, ne pas oublié de changer l'url en fonction de l'environnement d'execution\nexport class CallForPaperService {\n\n  apiURL: string = environment.apiURL;\n\n  constructor(private http: HttpClient) {}\n\n  public getCalls() {\n    const url = `${this.apiURL}/getCall`;\n    console.log('getCalls |  url = ' + url);\n    return this.http.get<CallForPaper[]>(url);\n  }\n\n  public getCallById(id: number) {\n    const url = `${this.apiURL}/getCall/${id}`;\n    console.log('getCallById |  url = ' + url);\n    return this.http.get(url);\n  }\n\n  public createCall(call: CallForPaper) {\n    const url = `${this.apiURL}/createCall`;\n    console.log('createCall |  url = ' + url);\n    return this.http.post(url, call);\n  }\n\n  public getCallsByRank(rank: string) {\n    let url;\n\n    if(rank === \"CNRS\"){\n      url = `${this.apiURL}/getCallFilterCNRS`;\n    } else if(rank === \"HCERES\") {\n      url = `${this.apiURL}/getCallFilterHCERES`;\n    } else if(rank === \"FNEGE\") {\n      url = `${this.apiURL}/getCallFilterFNEGE`;\n    } else {\n      url = `${this.apiURL}/getCall`\n    }\n    \n    console.log('getCallsByRank |  url = ' + url);\n    return this.http.get<CallForPaper[]>(url);\n  }\n\n  public getNbCallByRevue(id: number) {\n    const number = `${this.apiURL}/getNbCallByRevue/${id}`;\n    console.log('getNbCallByRevue |  nombre = ' + number);\n    return this.http.get(number);\n  }\n\n  public getNbCallByMonth(){\n    return this.http.get<CallByMonth[]>(`${this.apiURL}/getNbCallByMonth`);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Editeur } from '../models/editeur';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditeurService {\n\n  apiURL: string = environment.apiURL;\n\n  constructor(private http: HttpClient) {}\n\n  public getEditeurs() {\n    return this.http.get<Editeur[]>(`${this.apiURL}/getEditeur`);\n  }\n\n  public getNbCallByEditeur() {\n    return this.http.get<Editeur[]>(`${this.apiURL}/getNbCallByEditeur`);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { RevueService } from '../revue.service';\nimport { map } from 'rxjs/operators';\n\n@Pipe({\n  name: 'getRevueNameById'\n})\nexport class GetRevueNameByIdPipe implements PipeTransform {\n\n  constructor(private revueService: RevueService) {\n\n  }\n\n  transform(value: number, ...args: any[]): any {\n    return this.getRevueNameById(value);\n  }\n\n  getRevueNameById(id: number) {\n    return this.revueService.getRevueById(id).pipe(\n      map((value) => value[0].name)\n    )\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { RevueService } from '../revue.service';\nimport { map } from 'rxjs/operators';\n\n@Pipe({\n  name: 'getWidgetSjr'\n})\nexport class GetWidgetSjrPipe implements PipeTransform {\n\n  constructor(private revueService: RevueService) {}\n\n  transform(value: number, ...args: any[]): any {\n    return this.getRevueWidgetById(value);\n  }\n\n  getRevueWidgetById(id: number) {\n    return this.revueService.getRevueById(id).pipe(\n      map((value) => value[0].sjr)\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Revue } from '../models/revue';\nimport {environment} from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\n// Service permettant la récupration des Revues via des appels API, ne pas oublié de changer l'url en fonction de l'environnement d'execution\nexport class RevueService {\n\n  apiURL: string = environment.apiURL;\n\n  constructor(private http: HttpClient) {}\n\n  public getRevues() {\n    const url = `${this.apiURL}/getRevue`;\n    console.log('getRevues |  url = ' + url);\n    return this.http.get<Revue[]>(url);\n  }\n\n  public getRevueById(id: number) {\n    const url = `${this.apiURL}/getRevue/${id}`;\n    console.log('getRevueById |  url = ' + url);\n    return this.http.get<Revue>(url);\n  }\n\n  public getRevueIdbyName(id: string) {\n    const url = `${this.apiURL}/getRevueIdbyName/${id}`;\n    console.log('getRevueIdbyName |  url = ' + url);\n    return this.http.get(url);\n  }\n\n  public createRevue(revue: Revue) {\n    const url = `${this.apiURL}/createRevue`;\n    console.log('createRevue |  url = ' + url);\n    return this.http.post(url, revue);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: 'http://localhost:8080/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}